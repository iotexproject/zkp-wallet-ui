/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "./common";
import type {
  ZKPWalletNFT,
  ZKPWalletNFTInterface,
} from "./ZKPWalletNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOTAL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001780380380620017808339810160408190526200003491620000d8565b6040518060400160405280601a81526020017f496e74726f647563696e67205a4b502057616c6c6574204e4654000000000000815250604051806040016040528060048152602001630495a4b560e41b81525081600090816200009891906200023c565b506001620000a782826200023c565b5060069150620000ba905082826200023c565b505062000308565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620000ec57600080fd5b82516001600160401b03808211156200010457600080fd5b818501915085601f8301126200011957600080fd5b8151818111156200012e576200012e620000c2565b604051601f8201601f19908116603f01168101908382118183101715620001595762000159620000c2565b8160405282815288868487010111156200017257600080fd5b600093505b8284101562000196578484018601518185018701529285019262000177565b600086848301015280965050505050505092915050565b600181811c90821680620001c257607f821691505b602082108103620001e357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200023757600081815260208120601f850160051c81016020861015620002125750805b601f850160051c820191505b8181101562000233578281556001016200021e565b5050505b505050565b81516001600160401b03811115620002585762000258620000c2565b6200027081620002698454620001ad565b84620001e9565b602080601f831160018114620002a857600084156200028f5750858301515b600019600386901b1c1916600185901b17855562000233565b600085815260208120601f198616915b82811015620002d957888601518255948401946001909101908401620002b8565b5085821015620002f85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61146880620003186000396000f3fe6080604052600436106100f35760003560e01c80636352211e1161008a578063a22cb46511610059578063a22cb465146102b0578063b88d4fde146102d0578063c87b56dd146102f0578063e985e9c51461031057600080fd5b80636352211e1461024557806370a082311461026557806375794a3c1461028557806395d89b411461029b57600080fd5b80631249c58b116100c65780631249c58b146101d957806323b872dd146101e157806327efc0861461020157806342842e0e1461022557600080fd5b806301ffc9a7146100f857806306fdde031461012d578063081812fc1461014f578063095ea7b3146101b7575b600080fd5b34801561010457600080fd5b5061011861011336600461108c565b61034b565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b50610142610430565b60405161012491906110b0565b34801561015b57600080fd5b5061019261016a36600461111c565b60046020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b3480156101c357600080fd5b506101d76101d2366004611159565b6104be565b005b6101d76105f3565b3480156101ed57600080fd5b506101d76101fc366004611183565b610665565b34801561020d57600080fd5b5061021761271081565b604051908152602001610124565b34801561023157600080fd5b506101d7610240366004611183565b6108de565b34801561025157600080fd5b5061019261026036600461111c565b610a2e565b34801561027157600080fd5b506102176102803660046111bf565b610aa5565b34801561029157600080fd5b5061021760075481565b3480156102a757600080fd5b50610142610b33565b3480156102bc57600080fd5b506101d76102cb3660046111da565b610b40565b3480156102dc57600080fd5b506101d76102eb366004611216565b610bd7565b3480156102fc57600080fd5b5061014261030b36600461111c565b610d17565b34801561031c57600080fd5b5061011861032b3660046112b1565b600560209081526000928352604080842090915290825290205460ff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614806103de57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b8061042a57507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000805461043d906112e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610469906112e4565b80156104b65780601f1061048b576101008083540402835291602001916104b6565b820191906000526020600020905b81548152906001019060200180831161049957829003601f168201915b505050505081565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1633811480610521575073ffffffffffffffffffffffffffffffffffffffff8116600090815260056020908152604080832033845290915290205460ff165b6105725760405162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a454400000000000000000000000000000000000060448201526064015b60405180910390fd5b60008281526004602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b612710600754106106465760405162461bcd60e51b815260206004820152600a60248201527f6d696e7420656e646564000000000000000000000000000000000000000000006044820152606401610569565b6106633360076000815461065990611337565b9182905550610dab565b565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff8481169116146106db5760405162461bcd60e51b815260206004820152600a60248201527f57524f4e475f46524f4d000000000000000000000000000000000000000000006044820152606401610569565b73ffffffffffffffffffffffffffffffffffffffff821661073e5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610569565b3373ffffffffffffffffffffffffffffffffffffffff84161480610792575073ffffffffffffffffffffffffffffffffffffffff8316600090815260056020908152604080832033845290915290205460ff165b806107c0575060008181526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b61080c5760405162461bcd60e51b815260206004820152600e60248201527f4e4f545f415554484f52495a45440000000000000000000000000000000000006044820152606401610569565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260036020908152604080832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055938616808352848320805460010190558583526002825284832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108e9838383610665565b73ffffffffffffffffffffffffffffffffffffffff82163b15806109dd57506040517f150b7a020000000000000000000000000000000000000000000000000000000080825233600483015273ffffffffffffffffffffffffffffffffffffffff858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610995573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b99190611396565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610a295760405162461bcd60e51b815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610569565b505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1680610aa05760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4d494e544544000000000000000000000000000000000000000000006044820152606401610569565b919050565b600073ffffffffffffffffffffffffffffffffffffffff8216610b0a5760405162461bcd60e51b815260206004820152600c60248201527f5a45524f5f4144445245535300000000000000000000000000000000000000006044820152606401610569565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6001805461043d906112e4565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610be2858585610665565b73ffffffffffffffffffffffffffffffffffffffff84163b1580610cc457506040517f150b7a02000000000000000000000000000000000000000000000000000000008082529073ffffffffffffffffffffffffffffffffffffffff86169063150b7a0290610c5d9033908a908990899089906004016113b3565b6020604051808303816000875af1158015610c7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca09190611396565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610d105760405162461bcd60e51b815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610569565b5050505050565b606060068054610d26906112e4565b80601f0160208091040260200160405190810160405280929190818152602001828054610d52906112e4565b8015610d9f5780601f10610d7457610100808354040283529160200191610d9f565b820191906000526020600020905b815481529060010190602001808311610d8257829003601f168201915b50505050509050919050565b610db58282610ef6565b73ffffffffffffffffffffffffffffffffffffffff82163b1580610ea657506040517f150b7a0200000000000000000000000000000000000000000000000000000000808252336004830152600060248301819052604483018490526080606484015260848301529073ffffffffffffffffffffffffffffffffffffffff84169063150b7a029060a4016020604051808303816000875af1158015610e5e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e829190611396565b7fffffffff0000000000000000000000000000000000000000000000000000000016145b610ef25760405162461bcd60e51b815260206004820152601060248201527f554e534146455f524543495049454e54000000000000000000000000000000006044820152606401610569565b5050565b73ffffffffffffffffffffffffffffffffffffffff8216610f595760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f524543495049454e540000000000000000000000000000006044820152606401610569565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1615610fcb5760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e5445440000000000000000000000000000000000006044820152606401610569565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461108957600080fd5b50565b60006020828403121561109e57600080fd5b81356110a98161105b565b9392505050565b600060208083528351808285015260005b818110156110dd578581018301518582016040015282016110c1565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b60006020828403121561112e57600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610aa057600080fd5b6000806040838503121561116c57600080fd5b61117583611135565b946020939093013593505050565b60008060006060848603121561119857600080fd5b6111a184611135565b92506111af60208501611135565b9150604084013590509250925092565b6000602082840312156111d157600080fd5b6110a982611135565b600080604083850312156111ed57600080fd5b6111f683611135565b91506020830135801515811461120b57600080fd5b809150509250929050565b60008060008060006080868803121561122e57600080fd5b61123786611135565b945061124560208701611135565b935060408601359250606086013567ffffffffffffffff8082111561126957600080fd5b818801915088601f83011261127d57600080fd5b81358181111561128c57600080fd5b89602082850101111561129e57600080fd5b9699959850939650602001949392505050565b600080604083850312156112c457600080fd5b6112cd83611135565b91506112db60208401611135565b90509250929050565b600181811c908216806112f857607f821691505b602082108103611331577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361138f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602082840312156113a857600080fd5b81516110a98161105b565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525084604083015260806060830152826080830152828460a0840137600060a0848401015260a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501168301019050969550505050505056fea2646970667358221220de062ae5a0cf69635d73246e44064dd2835ec33df9f88660a8ac48641d3f9c6564736f6c63430008110033";

type ZKPWalletNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKPWalletNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKPWalletNFT__factory extends ContractFactory {
  constructor(...args: ZKPWalletNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _uri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKPWalletNFT> {
    return super.deploy(_uri, overrides || {}) as Promise<ZKPWalletNFT>;
  }
  override getDeployTransaction(
    _uri: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_uri, overrides || {});
  }
  override attach(address: string): ZKPWalletNFT {
    return super.attach(address) as ZKPWalletNFT;
  }
  override connect(signer: Signer): ZKPWalletNFT__factory {
    return super.connect(signer) as ZKPWalletNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKPWalletNFTInterface {
    return new utils.Interface(_abi) as ZKPWalletNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKPWalletNFT {
    return new Contract(address, _abi, signerOrProvider) as ZKPWalletNFT;
  }
}
