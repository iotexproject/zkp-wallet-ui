/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "./common";
import type {
  ZKPassAccount,
  ZKPassAccountInterface,
} from "./ZKPassAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "contract IVerifier",
        name: "aVerifier",
        type: "address",
      },
      {
        internalType: "contract IEmailGuardian",
        name: "anEmailGuardian",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "passHash",
        type: "uint256",
      },
    ],
    name: "AccountRecovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "email",
        type: "bytes32",
      },
    ],
    name: "EmailGuardianAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "passHash",
        type: "uint256",
      },
    ],
    name: "PasswordChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "namaHash",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "passHash",
        type: "uint256",
      },
    ],
    name: "ZKPassAccountInitialized",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_email",
        type: "bytes32",
      },
    ],
    name: "addEmailGuardian",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_passHash",
        type: "uint256",
      },
    ],
    name: "changePassword",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "email",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_nameHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_passHash",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nameHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "passHash",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_server",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_passHash",
        type: "uint256",
      },
    ],
    name: "recovery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "toBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "b",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract IVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_opHash",
        type: "uint256",
      },
    ],
    name: "verifyProof",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x610120604052306080527f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000160a0523480156200003a57600080fd5b50604051620029e6380380620029e68339810160408190526200005d9162000095565b6001600160a01b0392831660c05290821660e0521661010052620000e9565b6001600160a01b03811681146200009257600080fd5b50565b600080600060608486031215620000ab57600080fd5b8351620000b8816200007c565b6020850151909350620000cb816200007c565b6040850151909250620000de816200007c565b809150509250925092565b60805160a05160c05160e05161010051612864620001826000396000610e750152600081816102bc01526111130152600081816104ba01528181610a5801528181610b32015281816112dd015281816114b6015281816115b0015281816115f7015261191a015260006110810152600081816107f20152818161088801528181610bf601528181610c8c0152610dbb01526128646000f3fe6080604052600436106101af5760003560e01c806361c6ceef116100ec578063b61d27f61161008a578063c62b428e11610064578063c62b428e1461055b578063d087d2881461057b578063f172a4ce14610590578063f23a6e61146105a657600080fd5b8063b61d27f6146104de578063bc197c81146104fe578063c399ec881461054657600080fd5b80638da5cb5b116100c65780638da5cb5b1461044257806399a4453114610475578063a13de38914610495578063b0d691fe146104ab57600080fd5b806361c6ceef146103df578063775a8f5e146103ff578063820e93f51461042c57600080fd5b80633a871cdd116101595780634d44560d116101335780634d44560d146103775780634f1ef2861461039757806352d1902d146103aa5780635936807c146103bf57600080fd5b80633a871cdd146103215780634a1a2aff1461034f5780634a58db191461036f57600080fd5b806318dfb3c71161018a57806318dfb3c71461028d5780632b7ac3f3146102ad5780633659cfe61461030157600080fd5b806223de29146101bb57806301ffc9a7146101e2578063150b7a021461021757600080fd5b366101b657005b600080fd5b3480156101c757600080fd5b506101e06101d6366004611d95565b5050505050505050565b005b3480156101ee57600080fd5b506102026101fd366004611e46565b6105ec565b60405190151581526020015b60405180910390f35b34801561022357600080fd5b5061025c610232366004611e88565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff00000000000000000000000000000000000000000000000000000000909116815260200161020e565b34801561029957600080fd5b506101e06102a8366004611f40565b6106d1565b3480156102b957600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161020e565b34801561030d57600080fd5b506101e061031c366004611fac565b6107db565b34801561032d57600080fd5b5061034161033c366004611fc9565b6109ac565b60405190815260200161020e565b34801561035b57600080fd5b506101e061036a36600461201d565b6109d2565b6101e0610a54565b34801561038357600080fd5b506101e0610392366004612036565b610ae1565b6101e06103a5366004612091565b610bdf565b3480156103b657600080fd5b50610341610da1565b3480156103cb57600080fd5b506101e06103da366004612173565b610e73565b3480156103eb57600080fd5b506102026103fa3660046121f5565b610fab565b34801561040b57600080fd5b5061041f61041a36600461201d565b61119c565b60405161020e91906122af565b34801561043857600080fd5b5061034160035481565b34801561044e57600080fd5b506000546102dc9062010000900473ffffffffffffffffffffffffffffffffffffffff1681565b34801561048157600080fd5b506101e061049036600461201d565b6111c6565b3480156104a157600080fd5b5061034160025481565b3480156104b757600080fd5b507f00000000000000000000000000000000000000000000000000000000000000006102dc565b3480156104ea57600080fd5b506101e06104f93660046122c2565b611248565b34801561050a57600080fd5b5061025c610519366004612312565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561055257600080fd5b50610341611297565b34801561056757600080fd5b506101e06105763660046123b0565b61134e565b34801561058757600080fd5b50610341611563565b34801561059c57600080fd5b5061034160015481565b3480156105b257600080fd5b5061025c6105c13660046123e9565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000148061067f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806106cb57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6106d96115df565b82811461072d5760405162461bcd60e51b815260206004820152601360248201527f77726f6e67206172726179206c656e677468730000000000000000000000000060448201526064015b60405180910390fd5b60005b838110156107d4576107c285858381811061074d5761074d612465565b90506020020160208101906107629190611fac565b600085858581811061077657610776612465565b90506020028101906107889190612494565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061166692505050565b806107cc816124f9565b915050610730565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036108865760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610724565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166108fb7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff16146109845760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610724565b61098d816116e3565b604080516000808252602082019092526109a991839190611732565b50565b60006109b6611902565b6109c08484611987565b90506109cb826119b5565b9392505050565b303314610a215760405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610724565b600281905560405181907f69421e634ab81a6413cb3cd515e7d4a9365c38b7012b1ac706fa50f65817a46a90600090a250565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163460405160006040518083038185875af1925050503d8060008114610ace576040519150601f19603f3d011682016040523d82523d6000602084013e610ad3565b606091505b50509050806109a957600080fd5b303314610b305760405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610724565b7f00000000000000000000000000000000000000000000000000000000000000006040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b158015610bc357600080fd5b505af1158015610bd7573d6000803e3d6000fd5b505050505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610c8a5760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f64656c656761746563616c6c00000000000000000000000000000000000000006064820152608401610724565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610cff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1614610d885760405162461bcd60e51b815260206004820152602c60248201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060448201527f6163746976652070726f787900000000000000000000000000000000000000006064820152608401610724565b610d91826116e3565b610d9d82826001611732565b5050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e4e5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c00000000000000006064820152608401610724565b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16630ae362d7876003543089898989610ec18a61119c565b6040518963ffffffff1660e01b8152600401610ee49897969594939291906125a1565b6020604051808303816000875af1158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190612613565b610f735760405162461bcd60e51b815260206004820152601160248201527f696e76616c696420646b696d20646174610000000000000000000000000000006044820152606401610724565b600281905560405181907f8d0800983717a57679339099a6b5fa0d6c32cb1e3f2358eac8cee5109b4f0d4390600090a2505050505050565b6000610fb5611cdf565b610fbd611cfd565b610fc5611cdf565b6000806000806000806000808e8e60009061010092610fe693929190612635565b810190610ff3919061265f565b6040805180820182529889526020808a019890985280516080810182528082019788526060810196909652958552855180870187529384528387019290925283860192909252835180850190945290835292820192909252919c509a5098506000975061107196508d955061010094508593508e9250612635915050565b61107a916126b4565b90506110a67f0000000000000000000000000000000000000000000000000000000000000000876126f0565b95506000604051806080016040528060025481526020018381526020016110cb611563565b81526020018890526040517f5fe8c13b00000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635fe8c13b9061114e90889088908890879060040161274e565b602060405180830381865afa15801561116b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118f9190612613565b9998505050505050505050565b60408051602080825281830190925260609160208201818036833750505060208101929092525090565b3033146112155760405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610724565b600381905560405181907fd8adaafedab553012b2226f396e06cbdc69b9391df6050ac3ccac863bd4e946790600090a250565b6112506115df565b611291848484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061166692505050565b50505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015611325573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061134991906127d2565b905090565b600054610100900460ff161580801561136e5750600054600160ff909116105b806113885750303b158015611388575060005460ff166001145b6113fa5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610724565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561145857600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b600184905560028390556000805473ffffffffffffffffffffffffffffffffffffffff80851662010000027fffffffffffffffffffff0000000000000000000000000000000000000000ffff909216919091178255604051859287927f000000000000000000000000000000000000000000000000000000000000000016917f55431516e10bd0917ebc953b5940f38069957d016c7c6bd08187700c86d995a89190a4801561129157600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050565b6040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201526000602482018190529073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401611308565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146116645760405162461bcd60e51b815260206004820152601760248201527f6163636f756e743a206e6f7420456e747279506f696e740000000000000000006044820152606401610724565b565b6000808473ffffffffffffffffffffffffffffffffffffffff16848460405161168f91906127eb565b60006040518083038185875af1925050503d80600081146116cc576040519150601f19603f3d011682016040523d82523d6000602084013e6116d1565b606091505b5091509150816107d457805160208201fd5b3033146109a95760405162461bcd60e51b815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152606401610724565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561176a5761176583611a20565b505050565b8273ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156117ef575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526117ec918101906127d2565b60015b6118615760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201527f6f6e206973206e6f7420555550530000000000000000000000000000000000006064820152608401610724565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc81146118f65760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f7860448201527f6961626c655555494400000000000000000000000000000000000000000000006064820152608401610724565b50611765838383611b10565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146116645760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152606401610724565b60006119a061199a610140850185612494565b84610fab565b6119ac575060016106cb565b50600092915050565b80156109a95760405160009033907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90849084818181858888f193505050503d80600081146107d4576040519150601f19603f3d011682016040523d82523d6000602084013e6107d4565b73ffffffffffffffffffffffffffffffffffffffff81163b611aaa5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152608401610724565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b611b1983611b35565b600082511180611b265750805b15611765576112918383611b82565b611b3e81611a20565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606109cb83836040518060600160405280602781526020016128086027913960606000808573ffffffffffffffffffffffffffffffffffffffff1685604051611bcc91906127eb565b600060405180830381855af49150503d8060008114611c07576040519150601f19603f3d011682016040523d82523d6000602084013e611c0c565b606091505b5091509150611c1d86838387611c27565b9695505050505050565b60608315611ca3578251600003611c9c5773ffffffffffffffffffffffffffffffffffffffff85163b611c9c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610724565b5081611cad565b611cad8383611cb5565b949350505050565b815115611cc55781518083602001fd5b8060405162461bcd60e51b815260040161072491906122af565b60405180604001604052806002906020820280368337509192915050565b60405180604001604052806002905b611d14611cdf565b815260200190600190039081611d0c5790505090565b73ffffffffffffffffffffffffffffffffffffffff811681146109a957600080fd5b60008083601f840112611d5e57600080fd5b50813567ffffffffffffffff811115611d7657600080fd5b602083019150836020828501011115611d8e57600080fd5b9250929050565b60008060008060008060008060c0898b031215611db157600080fd5b8835611dbc81611d2a565b97506020890135611dcc81611d2a565b96506040890135611ddc81611d2a565b955060608901359450608089013567ffffffffffffffff80821115611e0057600080fd5b611e0c8c838d01611d4c565b909650945060a08b0135915080821115611e2557600080fd5b50611e328b828c01611d4c565b999c989b5096995094979396929594505050565b600060208284031215611e5857600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146109cb57600080fd5b600080600080600060808688031215611ea057600080fd5b8535611eab81611d2a565b94506020860135611ebb81611d2a565b935060408601359250606086013567ffffffffffffffff811115611ede57600080fd5b611eea88828901611d4c565b969995985093965092949392505050565b60008083601f840112611f0d57600080fd5b50813567ffffffffffffffff811115611f2557600080fd5b6020830191508360208260051b8501011115611d8e57600080fd5b60008060008060408587031215611f5657600080fd5b843567ffffffffffffffff80821115611f6e57600080fd5b611f7a88838901611efb565b90965094506020870135915080821115611f9357600080fd5b50611fa087828801611efb565b95989497509550505050565b600060208284031215611fbe57600080fd5b81356109cb81611d2a565b600080600060608486031215611fde57600080fd5b833567ffffffffffffffff811115611ff557600080fd5b8401610160818703121561200857600080fd5b95602085013595506040909401359392505050565b60006020828403121561202f57600080fd5b5035919050565b6000806040838503121561204957600080fd5b823561205481611d2a565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080604083850312156120a457600080fd5b82356120af81611d2a565b9150602083013567ffffffffffffffff808211156120cc57600080fd5b818501915085601f8301126120e057600080fd5b8135818111156120f2576120f2612062565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561213857612138612062565b8160405282815288602084870101111561215157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000806000806000806080878903121561218c57600080fd5b86359550602087013567ffffffffffffffff808211156121ab57600080fd5b6121b78a838b01611d4c565b909750955060408901359150808211156121d057600080fd5b506121dd89828a01611d4c565b979a9699509497949695606090950135949350505050565b60008060006040848603121561220a57600080fd5b833567ffffffffffffffff81111561222157600080fd5b61222d86828701611d4c565b909790965060209590950135949350505050565b60005b8381101561225c578181015183820152602001612244565b50506000910152565b6000815180845261227d816020860160208601612241565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109cb6020830184612265565b600080600080606085870312156122d857600080fd5b84356122e381611d2a565b935060208501359250604085013567ffffffffffffffff81111561230657600080fd5b611fa087828801611d4c565b60008060008060008060008060a0898b03121561232e57600080fd5b883561233981611d2a565b9750602089013561234981611d2a565b9650604089013567ffffffffffffffff8082111561236657600080fd5b6123728c838d01611efb565b909850965060608b013591508082111561238b57600080fd5b6123978c838d01611efb565b909650945060808b0135915080821115611e2557600080fd5b6000806000606084860312156123c557600080fd5b833592506020840135915060408401356123de81611d2a565b809150509250925092565b60008060008060008060a0878903121561240257600080fd5b863561240d81611d2a565b9550602087013561241d81611d2a565b94506040870135935060608701359250608087013567ffffffffffffffff81111561244757600080fd5b61245389828a01611d4c565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126124c957600080fd5b83018035915067ffffffffffffffff8211156124e457600080fd5b602001915036819003821315611d8e57600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612551577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b88815287602082015273ffffffffffffffffffffffffffffffffffffffff8716604082015260c0606082015260006125dd60c083018789612558565b82810360808401526125f0818688612558565b905082810360a08401526126048185612265565b9b9a5050505050505050505050565b60006020828403121561262557600080fd5b815180151581146109cb57600080fd5b6000808585111561264557600080fd5b8386111561265257600080fd5b5050820193919092039150565b600080600080600080600080610100898b03121561267c57600080fd5b505086359860208801359850604088013597606081013597506080810135965060a0810135955060c0810135945060e0013592509050565b803560208310156106cb577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff602084900360031b1b1692915050565b600082612726577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b8060005b600281101561129157815184526020938401939091019060010161272f565b610180810161275d828761272b565b60408083018660005b600281101561278d5761277a83835161272b565b9183019160209190910190600101612766565b5050505061279e60c083018561272b565b61010082018360005b60048110156127c65781518352602092830192909101906001016127a7565b50505095945050505050565b6000602082840312156127e457600080fd5b5051919050565b600082516127fd818460208701612241565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212202e2f869d053e99be2d9eedb6fd688d9d8d3089f69b7e794325a12428f97a55f364736f6c63430008110033";

type ZKPassAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKPassAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKPassAccount__factory extends ContractFactory {
  constructor(...args: ZKPassAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    aVerifier: PromiseOrValue<string>,
    anEmailGuardian: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKPassAccount> {
    return super.deploy(
      anEntryPoint,
      aVerifier,
      anEmailGuardian,
      overrides || {}
    ) as Promise<ZKPassAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    aVerifier: PromiseOrValue<string>,
    anEmailGuardian: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      aVerifier,
      anEmailGuardian,
      overrides || {}
    );
  }
  override attach(address: string): ZKPassAccount {
    return super.attach(address) as ZKPassAccount;
  }
  override connect(signer: Signer): ZKPassAccount__factory {
    return super.connect(signer) as ZKPassAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKPassAccountInterface {
    return new utils.Interface(_abi) as ZKPassAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKPassAccount {
    return new Contract(address, _abi, signerOrProvider) as ZKPassAccount;
  }
}
